name: concourse

releases:
- name: concourse
  version: 3.4.1
- name: garden-runc
  version: 1.6.0
- name: nginx
  version: latest

instance_groups:
- name: web
  instances: 1
  vm_type: common-web
  azs: [z1]
  # vm_extensions: [concourse-lb]
  stemcell: trusty
  networks:
  - name: public
    static_ips: [<%= @private_subnet[12] %>]
    default: [dns, gateway]
  - name: vip
    static_ips: [<%= @values['concourse']['vip'] %>]

  jobs:
  - name: atc
    release: concourse
    properties:
      bind_port: 80
      external_url: <%= @values['concourse']['url'] %>
      basic_auth_username: <%= @values['concourse']['auth_username'] %>
      basic_auth_password: ((auth_password))
      publicly_viewable: true

      vault:
        auth:
          backend: token
          client_token: ((vault_token))
        path_prefix: /concourse
        url: "http://<%= @private_subnet[11] %>:8200" # expecting Vault to be deployed first

      postgresql_database: &atc_db atc

  - name: tsa
    release: concourse
    properties: {}

  - name: nginx
    release: nginx
    properties:
      nginx_conf: |
        worker_processes  1;
        error_log /var/vcap/sys/log/nginx/error.log   info;
        events {
          worker_connections  1024;
        }
        http {
          include /var/vcap/packages/nginx/conf/mime.types;
          default_type  application/octet-stream;
          sendfile        on;
          keepalive_timeout  65;
          server_names_hash_bucket_size 64;

          server {
             listen 443;
             server_name <%= @values['concourse']['hostname'] %>;
             ssl_certificate_key /var/vcap/jobs/nginx/etc/ssl.key.pem;
             ssl_certificate     /var/vcap/jobs/nginx/etc/ssl_chained.crt.pem;
             ssl on;
             ssl_session_cache  builtin:1000  shared:SSL:10m;
             ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
             ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
             ssl_prefer_server_ciphers on;

             access_log /var/vcap/sys/log/nginx/<%= @values['concourse']['hostname'] %>-access.log;
             error_log /var/vcap/sys/log/nginx/<%= @values['concourse']['hostname'] %>-error.log;

             location / {
               proxy_set_header        Host $host;
               proxy_set_header        X-Real-IP $remote_addr;
               proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
               proxy_set_header        X-Forwarded-Proto $scheme;

               # Fix the â€œIt appears that your reverse proxy set up is broken" error.
               proxy_pass          http://localhost:80;
               proxy_read_timeout  90;

               proxy_redirect      http://localhost:80 https://<%= @values['concourse']['hostname'] %>;
             }
          }
        }

      ssl_key: ((default_ca.private_key))
      ssl_chained_cert: ((default_ca.certificate))

- name: db
  instances: 1
  vm_type: common
  azs: [z1]
  stemcell: trusty
  persistent_disk_type: database
  networks:
  - name: public
    default: [dns, gateway]
  jobs:
  - name: postgresql
    release: concourse
    properties:
      databases:
      - name: *atc_db
        role: admin
        password: ((db_password))

- name: worker
  instances: 1
  vm_type: worker
  azs: [z1]
  stemcell: trusty
  networks:
  - name: public
    default: [dns, gateway]
  jobs:
  - name: groundcrew
    release: concourse
    properties:
      additional_resource_types:
      - type: gcs-resource
        image: docker:///frodenas/gcs-resource
  - name: baggageclaim
    release: concourse
    properties: {}
  - name: garden
    release: garden-runc
    properties:
      garden:
        listen_network: tcp
        listen_address: 0.0.0.0:7777
        network_mtu: 1432

update:
  canaries: 1
  max_in_flight: 1
  serial: false
  canary_watch_time: 1000-60000
  update_watch_time: 1000-60000

stemcells:
- alias: trusty
  os: ubuntu-trusty
  version: latest

variables:
- name: db_password
  type: password
- name: auth_password
  type: password
